<<<<<<< HEAD
# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      # prepare the database
      - run: touch storage/testing.sqlite
      - run: php artisan migrate --env=testing --database=sqlite_testing --force

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
      - run: ./vendor/bin/codecept build
      - run: ./vendor/bin/codecept run
=======
version: 2
jobs:
  build:
    steps:
      #before install
      - run: export TZ=America/Sao_Paulo
      - run: sudo pg_dropcluster --stop 12 main
      - run: sudo pg_upgradecluster 11 main
      - run: sudo pg_ctlcluster 12 main restart
      - run: sudo pg_dropcluster 11 main

      #ChromeDriver
      - run:
        name: Start Chrome Driver
          command: ./vendor/laravel/dusk/bin/chromedriver-linux
        background: true
      #before script
      - run: apt-get install postgresql-12
      - run: cp .env.circleci .env
      - run: cp .env.circleci .env.dusk.local
      - run: composer install
      - run: npm install
      - run: npm run dev
      - run: phpenv config-rm xdebug.ini || true
      - run: composer install
      - run: export LANGUAGE=pt_BR.UTF-8
      - run: locale
      - run: cp .env.circleci .env
      - run: cp .env.circleci .env.dusk.local
      - run: php artisan key:generate
      - run: psql -V
      - run: psql -c 'create database teste;' -U postgres
      - run: psql -c 'create user vagrant WITH SUPERUSER;' -U postgres
      - run: psql -c "alter user vagrant with encrypted password 'vagrant'" -U postgres;
      - run: psql -c 'grant all privileges on database teste to vagrant'  -U postgres
      - run: psql -d teste -U vagrant -c "show DateStyle;"
      - run: createdb docigp
      - run: php artisan storage:link
      - run: php artisan migrate
      - run: php artisan db:seed
      - run: php artisan dusk:chrome-driver
      - run: php artisan docigp:sync:parties
      - run: php artisan docigp:sync:congressmen
      - run: php artisan docigp:sync:departments
      - run: php artisan docigp:sync:roles
      - run: php artisan docigp:budget:generate
      - run: export DISPLAY=:100.0
      - run: php artisan config:clear
      - run: php artisan cache:clear
      - run: google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &
      - run: php artisan serve &
      #script
      - run: touch storage/logs/laravel.log
      - run: chmod -R 777 storage/logs/laravel.log
      - run: nohup php artisan queue:work --daemon &
      - run: php artisan dusk
      #after script
      - run: cat nohup.out

      #after Failure
      steps:
        - run: sleep 15s
        - run: php artisan email:failure
        - run: cat storage/logs/laravel.log
>>>>>>> CircleCi configuration
